[project]
name = "tohellasajuniorortoheavenasamid"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.1",
    "pydantic>=2.11.7",
    "pytest>=8.4.1",
    "sqlalchemy>=2.0.42",
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "pytest-mypy-plugins>=3.2.0",
    "ruff>=0.12.7",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]  # ВСЕ правила линтера теперь в секции lint!
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "T20",    # flake8-print
    "Q",      # flake8-quotes
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "PTH",    # flake8-use-pathlib
    "ERA",    # flake8-eradicate
    "PL",     # pylint
    "RUF",    # ruff-specific
]

ignore = [
    "E501",   # line too long (пусть formatter решает)
    "PLR0913", # too many arguments (если нужны все аргументы)
]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]  # star imports в __init__ допустимы
"tests/*" = ["T20", "S101"]  # print и assert в тестах OK
"main.py" = ["T201"]  # print в main файле может быть OK

[tool.ruff.lint.isort]
known-first-party = ["to_the_hell", "oncallhub"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"


[tool.mypy]
# Строгость проверки типов
python_version = "3.11"
strict = true

# Можно начать с менее строгих настроек
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"

# Игнорировать отсутствие типов в сторонних библиотеках
ignore_missing_imports = true

# Исключения
exclude = [
    ".venv",
    "venv",
    "build",
    "dist",
]

# Настройки для конкретных модулей
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
]
ignore_missing_imports = true

