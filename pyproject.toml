[project]
name = "to_the_hell"
version = "0.1.0"
license = {file = "LICENSE"}
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "asyncpg>=0.30.0",
    "fastapi>=0.116.1",
    "pre-commit>=4.2.0",
    "pydantic[mypy]>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pytest>=8.4.1",
    "sqlalchemy>=2.0.42",
    "pytest-asyncio>=1.1.0",
    "aiosqlite>=0.21.0",
    "python-multipart>=0.0.20",
    "pyjwt[crypto]>=2.8.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.9", # для form data
    "alembic>=1.16.5",
    "loguru>=0.7.3",
    "mako>=1.3.10",
    "psycopg2>=2.9.11",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov",
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "pytest-mypy-plugins>=3.2.0",
    "ruff>=0.12.7",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["to_the_hell"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "T20",    # flake8-print
    "Q",      # flake8-quotes
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "PTH",    # flake8-use-pathlib
    "ERA",    # flake8-eradicate
    "PL",     # pylint
    "RUF",    # ruff-specific
]

ignore = [
    "E501",
    "PLR0913",
]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["T20", "S101"]
"main.py" = ["T201"]
"scripts/*" = ["T201"]
"*/api/routers/*.py" = ["B008"]

[tool.ruff.lint.isort]
known-first-party = ["to_the_hell", "oncallhub"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = false
plugins = ["pydantic.mypy"]

exclude = [
    ".venv",
    "venv",
    "build",
    "dist",
    "alembic"
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "scripts.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "pydantic.*",
    "pydantic_settings.*",
    "fastapi.*",
    "pytest.*",
    "pytest_asyncio.*",
    "sqlalchemy.*",
    "alembic.*"
]
ignore_missing_imports = true

# Специфич: CommandBusные настройки для Pydantic
[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = 'pydantic'
ignore_missing_imports = false
